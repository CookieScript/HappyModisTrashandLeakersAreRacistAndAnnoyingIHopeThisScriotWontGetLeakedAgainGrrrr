-- AutoDribbleSettings
if not getgenv().AutoDribbleSettings then
    getgenv().AutoDribbleSettings = {
        Enabled = true,
        range = 22
    }
end

local S, R, P, U = getgenv().AutoDribbleSettings, game:GetService("ReplicatedStorage"), game:GetService("Players"), game:GetService("RunService")
local L = P.LocalPlayer or P.PlayerAdded:Wait()

-- Prevent GUI Duplication
if L:FindFirstChild("PlayerGui") and L.PlayerGui:FindFirstChild("AutoDribbleGUI") then
    L.PlayerGui.AutoDribbleGUI:Destroy()
end

-- Character Initialization
local function initCharacter()
    local C = L.Character or L.CharacterAdded:Wait()
    local H = C:WaitForChild("HumanoidRootPart")
    local M = C:WaitForChild("Humanoid")

    -- Reload on death
    M.Died:Connect(function()
        if L.PlayerGui:FindFirstChild("AutoDribbleGUI") then
            L.PlayerGui.AutoDribbleGUI:Destroy()
        end
        script:Destroy()
    end)

    return C, H, M
end

local C, H, M = initCharacter()
L.CharacterAdded:Connect(function()
    task.wait(1)  -- Prevents conflicts
    script:Destroy()
end)

-- GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "AutoDribbleGUI"
ScreenGui.Parent.game.CoreGui

local Frame = Instance.new("Frame", ScreenGui)
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Frame.Size = UDim2.new(0, 200, 0, 180)
Frame.Position = UDim2.new(0.5, -100, 0.5, -90)
Frame.Active = true
Frame.Draggable = true
Instance.new("UICorner", Frame).CornerRadius = UDim.new(0, 10)

-- White Credits (Hidden but not Transparent)
local Credit = Instance.new("TextLabel", Frame)
Credit.Text = "Made by XoHub"
Credit.Size = UDim2.new(1, 0, 0, 20)
Credit.Position = UDim2.new(0, 0, 0, -20)
Credit.BackgroundTransparency = 1  -- No background
Credit.TextColor3 = Color3.fromRGB(255, 255, 255)  -- **Now White**
Credit.Font = Enum.Font.SourceSansBold
Credit.TextSize = 16

-- If credit is removed, destroy script
Credit.Changed:Connect(function()
    if not Credit.Parent then
        ScreenGui:Destroy()
        script:Destroy()
    end
end)

local Title = Instance.new("TextLabel", Frame)
Title.Text = "Legit Auto Dribble"
Title.Size = UDim2.new(1, 0, 0, 30)
Title.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 18
Instance.new("UICorner", Title).CornerRadius = UDim.new(0, 10)

local RangeLabel = Instance.new("TextLabel", Frame)
RangeLabel.Position = UDim2.new(0, 10, 0, 40)
RangeLabel.Size = UDim2.new(0, 180, 0, 20)
RangeLabel.Text = "Range: " .. tostring(S.range)
RangeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
RangeLabel.BackgroundTransparency = 1
RangeLabel.Font = Enum.Font.SourceSansBold
RangeLabel.TextSize = 16

local RangeInput = Instance.new("TextBox", Frame)
RangeInput.Position = UDim2.new(0, 10, 0, 60)
RangeInput.Size = UDim2.new(0, 180, 0, 30)
RangeInput.Text = tostring(S.range)
RangeInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
RangeInput.TextColor3 = Color3.fromRGB(255, 255, 255)
RangeInput.Font = Enum.Font.SourceSansBold
RangeInput.TextSize = 18
RangeInput.ClearTextOnFocus = false
Instance.new("UICorner", RangeInput).CornerRadius = UDim.new(0, 6)

local ToggleButton = Instance.new("TextButton", Frame)
ToggleButton.Position = UDim2.new(0, 10, 0, 100)
ToggleButton.Size = UDim2.new(0, 180, 0, 30)
ToggleButton.Text = S.Enabled and "ON" or "OFF"
ToggleButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Font = Enum.Font.SourceSansBold
ToggleButton.TextSize = 18
Instance.new("UICorner", ToggleButton).CornerRadius = UDim.new(0, 6)

ToggleButton.MouseButton1Click:Connect(function()
    S.Enabled = not S.Enabled
    ToggleButton.Text = S.Enabled and "ON" or "OFF"
end)

RangeInput.FocusLost:Connect(function()
    local newRange = tonumber(RangeInput.Text)
    if newRange and newRange > 0 then
        S.range = newRange
        RangeLabel.Text = "Range: " .. tostring(newRange)
    else
        RangeInput.Text = tostring(S.range)
    end
end)

-- Reset Range Button
local ResetButton = Instance.new("TextButton", Frame)
ResetButton.Position = UDim2.new(0, 10, 0, 140)
ResetButton.Size = UDim2.new(0, 180, 0, 30)
ResetButton.Text = "Reset Range"
ResetButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
ResetButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ResetButton.Font = Enum.Font.SourceSansBold
ResetButton.TextSize = 18
Instance.new("UICorner", ResetButton).CornerRadius = UDim.new(0, 6)

ResetButton.MouseButton1Click:Connect(function()
    S.range = 22
    RangeLabel.Text = "Range: 22"
    RangeInput.Text = "22"
end)

-- Auto Dribble Function (Fixed)
local function autoDribble()
    if not S.Enabled or not C or not C:FindFirstChild("Values") or not C.Values:FindFirstChild("HasBall") or not C.Values.HasBall.Value then
        return
    end

    -- Simulate dribble action
    local BallService = R.Packages.Knit.Services.BallService.RE.Dribble
    BallService:FireServer()

    -- Prevent movement lag
    local F = workspace:FindFirstChild("Football")
    if F then
        F.AssemblyLinearVelocity = Vector3.new()
        F.CFrame = C.HumanoidRootPart.CFrame * CFrame.new(0, -2.5, 0)
    end
end

-- Run Auto Dribble when near enemy
U.Heartbeat:Connect(function()
    if not S.Enabled or not C or not H then return end
    for _, p in pairs(P:GetPlayers()) do
        if p ~= L and p.Team ~= L.Team and p.Character then
            local r = p.Character:FindFirstChild("HumanoidRootPart")
            if r and (r.Position - H.Position).Magnitude < S.range then
                autoDribble()
                break
            end
        end
    end
end)

print("âœ… AutoDribble GUI Loaded Successfully!")